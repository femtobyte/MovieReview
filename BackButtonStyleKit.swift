//
//  BackButtonStyleKit.swift
//  Movie Review
//
//  Created by  on 1/5/16.
//  Copyright (c) 2016 . All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class BackButtonStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let purple: UIColor = UIColor(red: 0.353, green: 0.235, blue: 0.663, alpha: 1.000)
        static var image32x44: UIImage?

    }

    //// Colors

    public class var purple: UIColor { return Cache.purple }

    //// Images

    public class var image32x44: UIImage {
        if Cache.image32x44 == nil {
            Cache.image32x44 = UIImage(named: "image32x44.png")!
        }
        return Cache.image32x44!
    }

    //// Drawing Methods

    public class func drawBackButton() {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(30.17, 12.5))
        bezierPath.addLineToPoint(CGPointMake(30.75, 12.5))
        bezierPath.addLineToPoint(CGPointMake(32.5, 14.26))
        bezierPath.addLineToPoint(CGPointMake(32.5, 14.84))
        bezierPath.addLineToPoint(CGPointMake(23.17, 24.21))
        bezierPath.addLineToPoint(CGPointMake(23.17, 24.79))
        bezierPath.addLineToPoint(CGPointMake(32.5, 34.16))
        bezierPath.addLineToPoint(CGPointMake(32.5, 34.74))
        bezierPath.addLineToPoint(CGPointMake(30.75, 36.5))
        bezierPath.addLineToPoint(CGPointMake(30.17, 36.5))
        bezierPath.addLineToPoint(CGPointMake(18.5, 24.79))
        bezierPath.addLineToPoint(CGPointMake(18.5, 24.21))
        bezierPath.addLineToPoint(CGPointMake(30.17, 12.5))
        bezierPath.closePath()
        BackButtonStyleKit.purple.setFill()
        bezierPath.fill()
        BackButtonStyleKit.purple.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()
    }

    public class func drawReel() {
        //// Color Declarations
        let color2 = UIColor(red: 0.500, green: 0.500, blue: 0.500, alpha: 1.000)
        let color = UIColor(red: 0.892, green: 0.889, blue: 0.889, alpha: 0.715)

        //// Group
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(0, 0, 50, 126))
        color2.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRectMake(13, 5, 25, 25))
        UIColor.whiteColor().setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRectMake(13, 95, 25, 25))
        UIColor.whiteColor().setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRectMake(13, 50, 25, 25))
        UIColor.whiteColor().setFill()
        rectangle4Path.fill()




        //// Group 2
        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRectMake(550, -1, 50, 126))
        color2.setFill()
        rectangle5Path.fill()


        //// Rectangle 6 Drawing
        let rectangle6Path = UIBezierPath(rect: CGRectMake(563, 4, 25, 25))
        UIColor.whiteColor().setFill()
        rectangle6Path.fill()


        //// Rectangle 7 Drawing
        let rectangle7Path = UIBezierPath(rect: CGRectMake(563, 94, 25, 25))
        UIColor.whiteColor().setFill()
        rectangle7Path.fill()


        //// Rectangle 8 Drawing
        let rectangle8Path = UIBezierPath(rect: CGRectMake(563, 49, 25, 25))
        UIColor.whiteColor().setFill()
        rectangle8Path.fill()


        //// Rectangle 9 Drawing
        let rectangle9Path = UIBezierPath(rect: CGRectMake(50, 0, 500, 125))
        color.setFill()
        rectangle9Path.fill()
    }

    public class func drawCanvas2() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(roundedRect: CGRectMake(4, 2, 52, 54), cornerRadius: 8)
        UIColor.grayColor().setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(roundedRect: CGRectMake(14, 9, 32, 40), cornerRadius: 2)
        UIColor.whiteColor().setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRectMake(7, 9, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(rect: CGRectMake(7, 18, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(rect: CGRectMake(7, 27, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle5Path.fill()


        //// Rectangle 6 Drawing
        let rectangle6Path = UIBezierPath(rect: CGRectMake(7, 36, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle6Path.fill()


        //// Rectangle 7 Drawing
        let rectangle7Path = UIBezierPath(rect: CGRectMake(7, 45, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle7Path.fill()


        //// Rectangle 8 Drawing
        let rectangle8Path = UIBezierPath(rect: CGRectMake(49, 9, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle8Path.fill()


        //// Rectangle 9 Drawing
        let rectangle9Path = UIBezierPath(rect: CGRectMake(49, 18, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle9Path.fill()


        //// Rectangle 10 Drawing
        let rectangle10Path = UIBezierPath(rect: CGRectMake(49, 27, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle10Path.fill()


        //// Rectangle 11 Drawing
        let rectangle11Path = UIBezierPath(rect: CGRectMake(49, 36, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle11Path.fill()


        //// Rectangle 12 Drawing
        let rectangle12Path = UIBezierPath(rect: CGRectMake(49, 45, 4, 4))
        UIColor.whiteColor().setFill()
        rectangle12Path.fill()
    }

}
